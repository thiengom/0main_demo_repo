const cds = require('../../cds')
const LOG = cds.log()
const { parentPort } = require('worker_threads')
const executorCallbackMap = new Map()

parentPort.on('message', function onWorkerMessageReceived(message) {
  const { id, kind, result } = message
  if (LOG._debug) LOG.debug(`Post message received on worker thread (workerQueryExecutor.js) from main thread`, message)
  if (!executorCallbackMap.has(id)) return

  switch (kind) {
    case 'responseData':
      executorCallbackMap.get(id)(result)
      executorCallbackMap.delete(id)
      return

    case 'cleanup':
      executorCallbackMap.delete(id)
      return
  }
})

function queryExecutor(resolve) {
  const id = cds.utils.uuid()
  executorCallbackMap.set(id, result => resolve(result))
  parentPort.postMessage({
    id,
    kind: 'run',
    target: 'srv',
    prop: 'run',
    responseData: true,
    args: [this]
  })
}

module.exports = queryExecutor
