const SELECT = require('../../../../lib/ql/SELECT')
const INSERT = require('../../../../lib/ql/INSERT')
const UPSERT = require('../../../../lib/ql/UPSERT')
const UPDATE = require('../../../../lib/ql/UPDATE')
const DELETE = require('../../../../lib/ql/DELETE')
const queryExecutor = require('./workerQueryExecutor')

class WorkerSELECT extends SELECT {
  // intercept await SELECT.from(...) calls
  then(r, e) {
    return new Promise(queryExecutor.bind(this)).then(r, e)
  }
}

class WorkerINSERT extends INSERT {
  then(r, e) {
    return new Promise(queryExecutor.bind(this)).then(r, e)
  }
}

class WorkerUPSERT extends UPSERT {
  then(r, e) {
    return new Promise(queryExecutor.bind(this)).then(r, e)
  }
}

class WorkerUPDATE extends UPDATE {
  then(r, e) {
    return new Promise(queryExecutor.bind(this)).then(r, e)
  }
}

class WorkerDELETE extends DELETE {
  then(r, e) {
    return new Promise(queryExecutor.bind(this)).then(r, e)
  }
}

Object.defineProperty(WorkerSELECT.prototype, 'cmd', { value: 'SELECT' })
Object.defineProperty(WorkerINSERT.prototype, 'cmd', { value: 'INSERT' })
Object.defineProperty(WorkerUPSERT.prototype, 'cmd', { value: 'UPSERT' })
Object.defineProperty(WorkerUPDATE.prototype, 'cmd', { value: 'UPDATE' })
Object.defineProperty(WorkerDELETE.prototype, 'cmd', { value: 'DELETE' })

module.exports = { WorkerSELECT, WorkerINSERT, WorkerUPSERT, WorkerUPDATE, WorkerDELETE }
